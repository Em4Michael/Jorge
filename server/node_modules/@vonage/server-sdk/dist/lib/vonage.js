"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Vonage = void 0;
const accounts_1 = require("@vonage/accounts");
const applications_1 = require("@vonage/applications");
const auth_1 = require("@vonage/auth");
const messages_1 = require("@vonage/messages");
const number_insights_1 = require("@vonage/number-insights");
const numbers_1 = require("@vonage/numbers");
const pricing_1 = require("@vonage/pricing");
const redact_1 = require("@vonage/redact");
const sms_1 = require("@vonage/sms");
const users_1 = require("@vonage/users");
const verify_1 = require("@vonage/verify");
const verify2_1 = require("@vonage/verify2");
const voice_1 = require("@vonage/voice");
const video_1 = require("@vonage/video");
const conversations_1 = require("@vonage/conversations");
/**
 * Represents the Vonage SDK for interacting with Vonage APIs.
 */
class Vonage {
    /**
     * The credentials used for authentication.
     */
    credentials;
    /**
     * Optional configuration parameters.
     */
    options;
    /**
     * Provides access to the Accounts API.
     */
    accounts;
    /**
     * Provides access to the Applications API.
     */
    applications;
    /**
     * Provides access to the Messages API.
     */
    messages;
    /**
     * Provides access to the Number Insights API.
     */
    numberInsights;
    /**
     * Provides access to the Numbers API.
     */
    numbers;
    /**
     * Provides access to the Pricing API.
     */
    pricing;
    /**
     * Provides access to the Redact API.
     */
    redact;
    /**
     * Provides access to the Secrets API.
     */
    secrets;
    /**
     * Provides access to the SMS API.
     */
    sms;
    /**
     * Provides access to the Users API.
     */
    users;
    /**
     * Provides access to the Verify V2 API.
     */
    verify2;
    /**
     * Provides access to the Verify API.
     */
    verify;
    /**
     * Provides access to the Voice API.
     */
    voice;
    /**
     * Provides access to the Video API.
     */
    video;
    /**
     * Provides access to the Conversations API.
     */
    conversations;
    /**
     * The credentials used for authentication.
     * @param {AuthInterface} credentials - The authentication credentials.
     * @param {ConfigParams} [options] - Optional configuration parameters.
     */
    constructor(credentials, options) {
        if (typeof credentials.getQueryParams === 'undefined') {
            credentials = new auth_1.Auth(credentials);
        }
        this.credentials = credentials;
        this.options = options || {};
        this.accounts = new accounts_1.Accounts(this.credentials, this.options);
        this.applications = new applications_1.Applications(this.credentials, this.options);
        this.messages = new messages_1.Messages(this.credentials, this.options);
        this.numberInsights = new number_insights_1.NumberInsights(this.credentials, this.options);
        this.numbers = new numbers_1.Numbers(this.credentials, this.options);
        this.pricing = new pricing_1.Pricing(this.credentials, this.options);
        this.redact = new redact_1.Redact(this.credentials, this.options);
        this.secrets = new accounts_1.Secrets(this.credentials, this.options);
        this.sms = new sms_1.SMS(this.credentials, this.options);
        this.users = new users_1.Users(this.credentials, this.options);
        this.verify = new verify_1.Verify(this.credentials, this.options);
        this.verify2 = new verify2_1.Verify2(this.credentials, this.options);
        this.voice = new voice_1.Voice(this.credentials, this.options);
        this.video = new video_1.Video(this.credentials, this.options);
        this.conversations = new conversations_1.Conversations(this.credentials, this.options);
    }
}
exports.Vonage = Vonage;
//# sourceMappingURL=vonage.js.map